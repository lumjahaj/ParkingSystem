/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BL.Fatura;
import DAL.FaturaException;
import DAL.FaturaRepository;
import Model.FaturaTableModel;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.ListSelectionModel;
import javax.swing.SpinnerDateModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author Lumi
 */
public class FaturaForm extends javax.swing.JInternalFrame {
    
    FaturaRepository faturaRepository = new FaturaRepository();
    FaturaTableModel faturaTableModel = new FaturaTableModel();
    /**
     * Creates new form FaturaForm
     */
    public FaturaForm() {
        initComponents();
        tabelaLoad();
    }
    public void emptyObject() {
        jTable1.clearSelection();
        dataFaturesDateChooser.setDate(null);
        kohaHyrjesSpinner.setValue(null);
        kohaDaljesSpinner.setValue(null);
        txtTotali.setText("");
    }
    private void tabelaLoad(){
        List<Fatura> lista = faturaRepository.findAll();
        faturaTableModel.add(lista);
        jTable1.setModel(faturaTableModel);
        faturaTableModel.fireTableDataChanged();
        tabelaSelectedIndexChange();
    }
    private void tabelaSelectedIndexChange() {
        final ListSelectionModel rowSM = jTable1.getSelectionModel();
        rowSM.addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent Ise) {
                if (Ise.getValueIsAdjusting()) {
                    return;
                }
                ListSelectionModel rowSM = (ListSelectionModel) Ise.getSource();
                int selectedIndex = rowSM.getAnchorSelectionIndex();
                if (selectedIndex > -1) {
                    Fatura fatura = faturaTableModel.getFatura(selectedIndex);

                    dataFaturesDateChooser.setDate(fatura.getDataFatures());
                    kohaHyrjesSpinner.setValue(fatura.getFaturaDetajetID().getKohaHyrjes());
                    kohaDaljesSpinner.setValue(fatura.getFaturaDetajetID().getKohaDaljes());
                    txtTotali.setText(fatura.getFaturaDetajetID().getTotali().toString());
                    
                }
            }
        });
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        dataFaturesDateChooser = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        kohaHyrjesSpinner = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        kohaDaljesSpinner = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        txtTotali = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setClosable(true);
        setMaximizable(true);

        jLabel1.setText("Data e Fatures:");

        jLabel4.setText("Koha e Hyrjes:");

        Date date = new Date();
        SpinnerDateModel sm =
        new SpinnerDateModel(date, null, null, Calendar.HOUR_OF_DAY);
        kohaHyrjesSpinner = new javax.swing.JSpinner(sm);
        JSpinner.DateEditor de = new JSpinner.DateEditor(kohaHyrjesSpinner, "HH:mm:ss");
        kohaHyrjesSpinner.setEditor(de);

        jLabel5.setText("Koha e Daljes:");

        Date date1 = new Date();
        SpinnerDateModel dm =
        new SpinnerDateModel(date, null, null, Calendar.HOUR_OF_DAY);
        kohaDaljesSpinner = new javax.swing.JSpinner(dm);
        JSpinner.DateEditor de1 = new JSpinner.DateEditor(kohaDaljesSpinner, "HH:mm:ss");
        kohaDaljesSpinner.setEditor(de1);

        jLabel6.setText("Totali:");

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnReset.setText("Reset");

        btnDelete.setText("Delete");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dataFaturesDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(kohaHyrjesSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(100, 100, 100)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(kohaDaljesSpinner)
                            .addComponent(txtTotali, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(btnSave)
                        .addGap(60, 60, 60)
                        .addComponent(btnReset)
                        .addGap(60, 60, 60)
                        .addComponent(btnDelete))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 624, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(kohaDaljesSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(kohaHyrjesSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(dataFaturesDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(txtTotali, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReset)
                    .addComponent(btnSave)
                    .addComponent(btnDelete))
                .addGap(50, 50, 50)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        try {          
            int row = jTable1.getSelectedRow();
            if (dataFaturesDateChooser.getDate() == null) {
                JOptionPane.showMessageDialog(this, "Ju lutem shkruani daten e fatures", "Error", JOptionPane.ERROR_MESSAGE);
            }
            else if(kohaHyrjesSpinner.getValue() == null || kohaHyrjesSpinner.getValue() == "00:00:00"){
                JOptionPane.showMessageDialog(this, "Ju lutem shkruani kohen e hyrjes.", "Error", JOptionPane.ERROR_MESSAGE);

            }
            else 
            {              
                if (row == -1) {
                    Fatura fatura = new Fatura();
                    
                    Date d1 = (Date)kohaHyrjesSpinner.getValue();
                    Date d2 = (Date)kohaDaljesSpinner.getValue();
                    double total = (d2.getTime() - d1.getTime()) * 1;

                    
                    fatura.setDataFatures(dataFaturesDateChooser.getDate());
                    fatura.getFaturaDetajetID().setKohaHyrjes(d1);
                    fatura.getFaturaDetajetID().setKohaDaljes(d2);
                    fatura.getFaturaDetajetID().setTotali(total);

                    faturaRepository.create(fatura);
                    JOptionPane.showMessageDialog(this, "E dhëna u ruajt me sukses !");
                } else {
                    Fatura fatura = this.faturaTableModel.getFatura(row);

                    Date d1 = (Date)kohaHyrjesSpinner.getValue();
                    Date d2 = (Date)kohaDaljesSpinner.getValue();
                    double total = (d2.getTime() - d1.getTime()) * 1;
                    
                    fatura.setDataFatures(dataFaturesDateChooser.getDate());
                    fatura.getFaturaDetajetID().setKohaHyrjes(d1);
                    fatura.getFaturaDetajetID().setKohaDaljes(d2);
                    fatura.getFaturaDetajetID().setTotali(total);
                    
                    faturaRepository.edit(fatura);
                    JOptionPane.showMessageDialog(this, "E dhëna u editua me sukses");
                }
                emptyObject();
                tabelaLoad();
            }
        } catch (FaturaException pe) {
            JOptionPane.showMessageDialog(this, pe.getMessage());    
          }  
    }//GEN-LAST:event_btnSaveActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSave;
    private com.toedter.calendar.JDateChooser dataFaturesDateChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JSpinner kohaDaljesSpinner;
    private javax.swing.JSpinner kohaHyrjesSpinner;
    private javax.swing.JTextField txtTotali;
    // End of variables declaration//GEN-END:variables
}
